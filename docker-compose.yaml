services:
  app:
    build:
      context: .
      target: development # Alterar para produção se necessário
    container_name: taskflow-api
    env_file: .env
    environment:
      - NODE_ENV=${NODE_ENV:-development}
    volumes:
      - ./:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy # Esperar o postgres estar pronto
    restart: unless-stopped
    networks:
      - taskflow-network
    command: npm run start:dev

  db:
    image: postgres:15
    container_name: taskflow-db
    env_file: .env
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - taskflow-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    
volumes:
  pg_data:

networks:
  taskflow-network:
    driver: bridge